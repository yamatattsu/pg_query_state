Parsed test spec with 2 sessions

starting permutation: s1_pg_qs_1
step s1_pg_qs_1: select pg_query_state(1);
ERROR:  backend with pid=1 not found

starting permutation: s1_pg_qs_2
step s1_pg_qs_2: select pg_query_state(pg_backend_pid());
ERROR:  attempt to extract state of current process

starting permutation: s1_save_pid s2_pg_qs_counterpart
step s1_save_pid: select save_own_pid(0);
save_own_pid   

               
INFO:  state of backend is idle
step s2_pg_qs_counterpart: select pg_query_state(counterpart_pid(0));
pg_query_state 


starting permutation: s1_save_pid s1_disable_pg_qs s2_pg_qs_counterpart
step s1_save_pid: select save_own_pid(0);
save_own_pid   

               
step s1_disable_pg_qs: set pg_query_state.enable to off;
INFO:  query execution statistics disabled
step s2_pg_qs_counterpart: select pg_query_state(counterpart_pid(0));
pg_query_state 


starting permutation: s1_set_bob s2_set_bob s1_save_pid s2_pg_qs_counterpart
step s1_set_bob: set role bob;
step s2_set_bob: set role bob;
step s1_save_pid: select save_own_pid(0);
save_own_pid   

               
INFO:  state of backend is idle
step s2_pg_qs_counterpart: select pg_query_state(counterpart_pid(0));
pg_query_state 


starting permutation: s1_set_bob s2_set_su s1_save_pid s2_pg_qs_counterpart
step s1_set_bob: set role bob;
step s2_set_su: set role super;
step s1_save_pid: select save_own_pid(0);
save_own_pid   

               
INFO:  state of backend is idle
step s2_pg_qs_counterpart: select pg_query_state(counterpart_pid(0));
pg_query_state 


starting permutation: s1_set_bob s2_set_alice s1_save_pid s2_pg_qs_counterpart
step s1_set_bob: set role bob;
step s2_set_alice: set role alice;
step s1_save_pid: select save_own_pid(0);
save_own_pid   

               
step s2_pg_qs_counterpart: select pg_query_state(counterpart_pid(0));
ERROR:  permission denied
